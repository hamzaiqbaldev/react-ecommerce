{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyDUYN1xZVNRn4hPUnPDDN0_rUFqBp6GeVk\",\n  authDomain: \"react-clothing-store-2bafd.firebaseapp.com\",\n  databaseURL: \"https://react-clothing-store-2bafd.firebaseio.com\",\n  projectId: \"react-clothing-store-2bafd\",\n  storageBucket: \"react-clothing-store-2bafd.appspot.com\",\n  messagingSenderId: \"844483255354\",\n  appId: \"1:844483255354:web:ff6034cecb1610a6816903\",\n  measurementId: \"G-TWM731XF4H\"\n};\nfirebase.initializeApp(config);\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  console.log(userRef);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAndItems = (collection, itemsToAdd) => {\n  const collectionRef = firestore.collection(collection);\n  const batch = firestore.batch();\n  itemsToAdd.forEach(item => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, item);\n  });\n  return batch.commit();\n};\nexport const convertSnapshotToMap = collection => {\n  const convertedSnapShot = collection.docs.map(doc => {\n    const {\n      title,\n      items\n    } = doc.data();\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["D:/react-learning/clothing-store/src/firebase/firebase.util.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","console","log","snapShot","get","exists","displayName","email","createdAt","Date","set","error","message","addCollectionAndItems","collection","itemsToAdd","collectionRef","batch","forEach","item","newDocRef","commit","convertSnapshotToMap","convertedSnapShot","docs","map","title","items","data","routeName","encodeURI","toLowerCase","id","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyDUYN1xZVNRn4hPUnPDDN0_rUFqBp6GeVk\",\r\n    authDomain: \"react-clothing-store-2bafd.firebaseapp.com\",\r\n    databaseURL: \"https://react-clothing-store-2bafd.firebaseio.com\",\r\n    projectId: \"react-clothing-store-2bafd\",\r\n    storageBucket: \"react-clothing-store-2bafd.appspot.com\",\r\n    messagingSenderId: \"844483255354\",\r\n    appId: \"1:844483255354:web:ff6034cecb1610a6816903\",\r\n    measurementId: \"G-TWM731XF4H\"\r\n  };\r\n\r\n  firebase.initializeApp(config);\r\n  \r\n  export const createUserProfileDocument = async (userAuth, additionalData) => {\r\n    if (!userAuth) return;\r\n    \r\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n    console.log(userRef);\r\n    const snapShot = await userRef.get();\r\n    \r\n    if (!snapShot.exists) {\r\n      const { displayName, email } = userAuth;\r\n      const createdAt = new Date();\r\n      try {\r\n        await userRef.set({\r\n          displayName,\r\n          email,\r\n          createdAt,\r\n          ...additionalData\r\n        });\r\n      } catch (error) {\r\n        console.log('error creating user', error.message);\r\n      }\r\n    }\r\n  \r\n    return userRef;\r\n  };\r\n\r\n\r\n  export const addCollectionAndItems = (collection, itemsToAdd) => {\r\n    const collectionRef = firestore.collection(collection);\r\n    \r\n    const batch = firestore.batch();\r\n\r\n    itemsToAdd.forEach(item => {\r\n      const newDocRef = collectionRef.doc();\r\n\r\n      batch.set(newDocRef, item);\r\n    });\r\n\r\n    return batch.commit();\r\n  };\r\n\r\n  export const convertSnapshotToMap = (collection) => {\r\n    const convertedSnapShot = collection.docs.map(doc => {\r\n      const {title, items} = doc.data();\r\n\r\n      return {\r\n        routeName: encodeURI(title.toLowerCase()),\r\n        id: doc.id,\r\n        title,\r\n        items\r\n      };\r\n    });\r\n  };\r\n  \r\n  export const auth = firebase.auth();\r\n  export const firestore = firebase.firestore();\r\n  \r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n  provider.setCustomParameters({ prompt: 'select_account' });\r\n  export const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n  \r\n  export default firebase;"]},"metadata":{},"sourceType":"module"}